// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef EASELIVESDK_SWIFT_H
#define EASELIVESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EaseLiveSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_PROTOCOL("_TtP11EaseLiveSDK18ComponentInterface_")
@protocol ComponentInterface <NSObject>
- (void)create;
- (void)load;
- (void)destroy;
- (void)pause;
@end

@class NSString;

SWIFT_PROTOCOL("_TtP11EaseLiveSDK21PlayerPluginInterface_")
@protocol PlayerPluginInterface <ComponentInterface>
- (void)setUrlWithVideoUrl:(NSString * _Nonnull)videoUrl;
@end

enum PlayerState : NSInteger;
@class EaseLiveError;
@class PlayerTracks;

SWIFT_CLASS("_TtC11EaseLiveSDK16PlayerPluginBase")
@interface PlayerPluginBase : NSObject <PlayerPluginInterface>
@property (nonatomic, copy) NSString * _Nonnull TAG;
@property (nonatomic, copy) NSString * _Nullable url;
/// Create the player instance
- (void)createPlayer;
/// Destroy the player instance
- (void)destroyPlayer;
/// Start playing the stream in the player
/// \param url URL of the stream to play
///
- (void)playVideoUrlWithUrl:(NSString * _Nonnull)url;
/// Seek to the given position in the player.
/// \param time The timecode as UTC milliseconds
///
- (void)setTimeWithTime:(int64_t)time;
/// Change the state of the player to the given state.
/// \param state The state to change to
///
- (void)setStateWithState:(enum PlayerState)state;
/// Show or hide the player controls
/// \param visible the wanted visibility
///
- (void)setControllerVisibleWithVisible:(BOOL)visible;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUrl:(NSString * _Null_unspecified)url OBJC_DESIGNATED_INITIALIZER;
- (void)createWithParams:(id _Nullable)params SWIFT_UNAVAILABLE_MSG("migrate to create()");
- (void)create;
- (void)load;
- (void)destroy;
- (void)pause;
- (void)setUrlWithVideoUrl:(NSString * _Nonnull)videoUrl;
/// Sends a message to EaseLive with the timecode of the current playback position when it is read from the player
/// \param time The current timecode as UTC milliseconds
///
- (void)onTimeWithTime:(int64_t)time;
/// Sends a message to EaseLive with the timecode of the current playback position when it is read from the player
/// \param time The current timecode as UTC milliseconds
///
/// \param position The current playback position in milliseconds
///
/// \param duration The current seekable duration in milliseconds
///
- (void)onTimeWithTime:(int64_t)time position:(int64_t)position duration:(int64_t)duration;
/// Sends a message to EaseLive when the visibility of player controls changed
/// \param visible true if visible or false if hidden
///
- (void)onControllerVisibilityChangedWithVisible:(BOOL)visible;
/// Sends a message to EaseLive when the visibility of player controls changed
/// \param controls hidden or visible
///
- (void)onStageWithControls:(NSString * _Nonnull)controls;
/// Sends a message to EaseLive with the current player state when the state changes in player
/// \param state The new player state
///
- (void)onStateWithState:(enum PlayerState)state;
/// Sends a message to EaseLive when timed metadata is read from player
/// \param metadata JSON formatted string
///
- (void)onMetadataWithMetadata:(NSString * _Nonnull)metadata;
- (void)onCreate;
- (void)onLoad;
/// Sends message to EaseLive that player is ready to start playback
- (void)onReady;
/// Sends message to EaseLive about an error that occurred in the player or player plugin
/// \param error error object with the error level and description
///
- (void)onErrorWithError:(EaseLiveError * _Nullable)error;
/// Called when the overlay UI is ready to receive events
- (void)onBridgeReady;
/// Called when the overlay UI has been displayed
- (void)onViewReady;
/// Set the selected tracks
/// \param tracks The tracks to select
///
- (void)setSelectedTracksWithTracks:(PlayerTracks * _Nonnull)tracks;
/// Sends a message to EaseLive with the current tracks
/// \param tracks The currently available and selected tracks
///
- (void)onTracksChangedWithTracks:(PlayerTracks * _Nonnull)tracks;
/// Sends a message to EaseLive with the current playback speed
/// \param speed Playback speed. 1 is 1x, 0 is 0x
///
- (void)onSpeedChangedWithSpeed:(float)speed;
/// Set the playback speed
/// \param speed Playback speed. 1 is 1x, 0 is 0x
///
- (void)setSpeedWithSpeed:(float)speed;
/// Sends a message to EaseLive with the current audio volume
/// \param volume Audio volume between 0 - 100
///
- (void)onVolumeChangedWithVolume:(NSInteger)volume;
/// Set the audio volume
/// \param volume Audio volume between 0 - 100
///
- (void)setVolumeWithVolume:(NSInteger)volume;
@end

@class UIView;
@class EaseLiveAvPlayer;
@class CALayer;
@class AVMetadataItem;
@class AVMediaSelectionOption;

SWIFT_CLASS("_TtC11EaseLiveSDK22EaseLiveAvPlayerPlugin")
@interface EaseLiveAvPlayerPlugin : PlayerPluginBase
@property (nonatomic, strong) UIView * _Nullable parentView;
@property (nonatomic, strong) EaseLiveAvPlayer * _Nullable player;
@property (nonatomic) BOOL loop;
- (nonnull instancetype)initWithParentView:(UIView * _Null_unspecified)parentView url:(NSString * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)createPlayer;
- (void)playVideoUrlWithUrl:(NSString * _Nonnull)url;
- (void)destroyPlayer;
- (void)pause;
- (CALayer * _Nullable)layer SWIFT_WARN_UNUSED_RESULT;
- (void)setTimeWithTime:(int64_t)time;
- (void)setSpeedWithSpeed:(float)speed;
- (void)setVolumeWithVolume:(NSInteger)volume;
- (void)setStateWithState:(enum PlayerState)state;
- (void)onTimedMetadataAsyncWithItem:(AVMetadataItem * _Nonnull)item seekablePosition:(int64_t)seekablePosition seekableDuration:(int64_t)seekableDuration completionHandler:(void (^ _Nonnull)(BOOL))completionHandler SWIFT_AVAILABILITY(ios,introduced=16);
- (BOOL)onTimedMetadataWithItem:(AVMetadataItem * _Nonnull)item seekablePosition:(int64_t)seekablePosition seekableDuration:(int64_t)seekableDuration SWIFT_WARN_UNUSED_RESULT;
- (void)onTimedMetadataWithItem:(AVMetadataItem * _Nonnull)item seekablePosition:(int64_t)seekablePosition seekableDuration:(int64_t)seekableDuration completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (BOOL)parseJsonWithValue:(NSString * _Nonnull)value position:(int64_t)position duration:(int64_t)duration SWIFT_WARN_UNUSED_RESULT;
- (void)onProgressWithCurrentTimecode:(int64_t)currentTimecode initialTimecode:(int64_t)initialTimecode maxTimecode:(int64_t)maxTimecode;
- (void)onTracksChangedWithVideoTracks:(NSArray<AVMediaSelectionOption *> * _Nullable)videoTracks audioTracks:(NSArray<AVMediaSelectionOption *> * _Nullable)audioTracks textTracks:(NSArray<AVMediaSelectionOption *> * _Nullable)textTracks selectedVideo:(AVMediaSelectionOption * _Nullable)selectedVideo selectedAudio:(AVMediaSelectionOption * _Nullable)selectedAudio selectedText:(AVMediaSelectionOption * _Nullable)selectedText;
- (void)setSelectedTracksWithTracks:(PlayerTracks * _Nonnull)tracks;
- (nonnull instancetype)initWithUrl:(NSString * _Null_unspecified)url SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK14AvPlayerPlugin") SWIFT_DEPRECATED_MSG("renamed EaseLiveAvPlayerPlugin")
@interface AvPlayerPlugin : EaseLiveAvPlayerPlugin
- (nonnull instancetype)initWithParentView:(UIView * _Null_unspecified)parentView url:(NSString * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ViewPluginInterface;
@class BridgePlugin;
@class WKUserContentController;
@class WKScriptMessage;

SWIFT_CLASS("_TtC11EaseLiveSDK6Bridge")
@interface Bridge : NSObject <WKScriptMessageHandler>
- (nonnull instancetype)initWithViewPlugin:(id <ViewPluginInterface> _Nonnull)viewPlugin bridgePlugin:(BridgePlugin * _Nonnull)bridgePlugin OBJC_DESIGNATED_INITIALIZER;
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (void)setupBridge;
- (void)removeBridge;
- (void)sendToBridgeWithJsonString:(NSString * _Nonnull)jsonString;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURL;

SWIFT_CLASS("_TtC11EaseLiveSDK18BridgeConfigHelper")
@interface BridgeConfigHelper : NSObject
+ (NSString * _Nullable)createUrlWithUrl:(NSString * _Nullable)url params:(NSDictionary<NSString *, id> * _Nullable)params replace:(BOOL)replace SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, NSString *> * _Nonnull)readQueryParameters:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK12BridgeEvents")
@interface BridgeEvents : NSObject
+ (NSString * _Nonnull)createTimecodeUpdatedJSONMessageWithTimecode:(int64_t)timecode initialTimecode:(int64_t)initialTimecode maxTimecode:(int64_t)maxTimecode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11EaseLiveSDK21BridgePluginInterface_")
@protocol BridgePluginInterface <ComponentInterface>
- (void)sendWithEvent:(NSString * _Nonnull)event payload:(NSString * _Nullable)payload;
- (void)onMessageWithMessage:(NSString * _Nonnull)message;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK12BridgePlugin")
@interface BridgePlugin : NSObject <BridgePluginInterface>
- (void)create;
- (void)load;
- (void)destroy;
- (void)pause;
- (void)sendWithEvent:(NSString * _Nonnull)event payload:(NSString * _Nullable)payload;
- (void)sendToBridgeWithEventType:(NSString * _Nonnull)eventType metadata:(NSDictionary<NSString *, id> * _Nullable)metadata;
- (void)onCreate;
- (void)onLoad;
- (void)onReady;
- (void)onErrorWithError:(EaseLiveError * _Nullable)error;
- (void)onMessageWithMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class PlayerConfig;
@class ViewConfig;

SWIFT_CLASS("_TtC11EaseLiveSDK6Config")
@interface Config : NSObject
@property (nonatomic, readonly, strong) PlayerConfig * _Nonnull player;
@property (nonatomic, readonly, strong) ViewConfig * _Nonnull view;
+ (Config * _Nonnull)fromJsonWithJsonObject:(NSDictionary<NSString *, id> * _Nonnull)jsonObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PlayerConfig")
@interface PlayerConfig : NSObject
- (NSString * _Nullable)createUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ViewConfig")
@interface ViewConfig : NSObject
- (NSString * _Nullable)createUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK15DeviceInfoUtils")
@interface DeviceInfoUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)sendDeviceInfo;
@end

@class NSNotification;

SWIFT_CLASS("_TtC11EaseLiveSDK8EaseLive")
@interface EaseLive : NSObject <ComponentInterface>
@property (nonatomic, readonly, strong) id <ViewPluginInterface> _Nullable viewPlugin;
@property (nonatomic, readonly, strong) id <BridgePluginInterface> _Nullable bridgePlugin;
@property (nonatomic, readonly, strong) id <PlayerPluginInterface> _Nullable playerPlugin;
@property (nonatomic, readonly, copy) NSArray<id <ComponentInterface>> * _Nonnull additionalPlugins;
+ (void)setDebuggingWithDebug:(BOOL)debug;
+ (BOOL)isDebugging SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithParentView:(UIView * _Nonnull)parentView webUrl:(NSString * _Nonnull)webUrl playerPlugin:(id <PlayerPluginInterface> _Nullable)playerPlugin;
- (nonnull instancetype)initWithUrl:(NSString * _Null_unspecified)url playerPlugin:(id <PlayerPluginInterface> _Nonnull)playerPlugin SWIFT_DEPRECATED_MSG("please migrate to init(parentView: UIView, webUrl: String, playerPlugin: PlayerPluginInterface)");
- (nonnull instancetype)initWithViewPlugin:(id <ViewPluginInterface> _Nonnull)viewPlugin playerPlugin:(id <PlayerPluginInterface> _Nonnull)playerPlugin;
- (nonnull instancetype)initWithUrl:(NSString * _Null_unspecified)url videoUrl:(NSString * _Null_unspecified)videoUrl SWIFT_UNAVAILABLE_MSG("migrate to init(parentView: UIView, webUrl: String, playerPlugin: PlayerPluginInterface)");
/// Initialize EaseLive
/// \param parentView view in which the Ease Live overlay will render
///
/// \param accountId account ID
///
/// \param projectId project ID. If not set, it will load the project the program belongs to
///
/// \param programId program ID
///
/// \param env environment to load, eg. “prod”, “staging” or “dev”
///
/// \param params optionally override parameters set by the environment
///
/// \param playerPlugin player plugin instance
///
- (nonnull instancetype)initWithParentView:(UIView * _Nonnull)parentView accountId:(NSString * _Nonnull)accountId projectId:(NSString * _Nullable)projectId programId:(NSString * _Nonnull)programId env:(NSString * _Nullable)env params:(NSDictionary<NSString *, id> * _Nullable)params playerPlugin:(id <PlayerPluginInterface> _Nullable)playerPlugin;
/// Load a different overlay
/// \param projectId project ID. If not set, it will load the project the program belongs to
///
/// \param programId program ID
///
/// \param env environment to load, eg. “prod”, “staging” or “dev”
///
/// \param params optionally override parameters set by the environment
///
- (void)setProgramWithProjectId:(NSString * _Nullable)projectId programId:(NSString * _Nonnull)programId env:(NSString * _Nullable)env params:(NSDictionary<NSString *, id> * _Nullable)params;
- (void)useWithPlugin:(id <ComponentInterface> _Nonnull)plugin;
- (void)removeAllAdditionalPlugins;
- (void)setUrlWithUrl:(NSString * _Null_unspecified)url SWIFT_UNAVAILABLE_MSG("'setUrl' has been renamed to 'setUrlWithWebUrl:'");
- (void)setUrlWithWebUrl:(NSString * _Null_unspecified)webUrl;
- (void)setUrlWithVideoUrl:(NSString * _Null_unspecified)videoUrl;
- (void)createWithParams:(id _Nullable)params SWIFT_DEPRECATED_MSG("migrate to create() and pass the parent view to the constructor");
- (void)create;
- (void)load;
- (void)destroy;
- (void)pause;
- (void)onCreate;
- (void)onLoad;
- (void)onReady;
- (void)onErrorWithError:(EaseLiveError * _Nullable)error;
- (void)onErrorWithNotification:(NSNotification * _Nullable)notification;
@end

@class AVPlayerItem;
@class AVPlayerItemMetadataOutput;
@class AVTimedMetadataGroup;
@class AVPlayerItemTrack;

SWIFT_CLASS("_TtC11EaseLiveSDK16EaseLiveAvPlayer")
@interface EaseLiveAvPlayer : AVPlayer <AVPlayerItemMetadataOutputPushDelegate>
@property (nonatomic, weak) EaseLiveAvPlayerPlugin * _Nullable playerPlugin;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)replaceCurrentItemWithPlayerItem:(AVPlayerItem * _Nullable)item;
- (double)currentItemDuration SWIFT_WARN_UNUSED_RESULT;
- (double)currentItemPosition SWIFT_WARN_UNUSED_RESULT;
- (void)onVolumeChangedWithVolume:(float)volume;
- (void)onRateChangedWithRate:(float)rate;
- (void)metadataOutput:(AVPlayerItemMetadataOutput * _Nonnull)output didOutputTimedMetadataGroups:(NSArray<AVTimedMetadataGroup *> * _Nonnull)groups fromPlayerItemTrack:(AVPlayerItemTrack * _Nullable)track;
- (void)removePlayerItemObservers;
- (void)removeTimers;
- (void)selectVideoTrackIndexWithIndex:(NSInteger)index completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)selectAudioTrackIndexWithIndex:(NSInteger)index completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)selectTextTrackIndexWithIndex:(NSInteger)index completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (nonnull instancetype)initWithURL:(NSURL * _Nonnull)URL SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithPlayerItem:(AVPlayerItem * _Nullable)item SWIFT_UNAVAILABLE;
@end


@class NSCoder;

SWIFT_CLASS("_TtC11EaseLiveSDK20EaseLiveAvPlayerView")
@interface EaseLiveAvPlayerView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum EaseLiveErrorLevel : NSInteger;
enum EaseLiveErrorComponent : NSInteger;

SWIFT_CLASS("_TtC11EaseLiveSDK13EaseLiveError")
@interface EaseLiveError : NSObject
+ (EaseLiveError * _Nonnull)bridgeInitWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
+ (EaseLiveError * _Nonnull)bridgeConnectivityWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
+ (EaseLiveError * _Nonnull)viewInitWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
+ (EaseLiveError * _Nonnull)viewConnectivityWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
+ (EaseLiveError * _Nonnull)playerInitWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
+ (EaseLiveError * _Nonnull)playerConnectivityWithLevel:(enum EaseLiveErrorLevel)level reason:(NSString * _Nonnull)reason SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) enum EaseLiveErrorComponent component;
@property (nonatomic, readonly) enum EaseLiveErrorLevel level;
@property (nonatomic, readonly, copy) NSString * _Nonnull reason;
@property (nonatomic, readonly, copy) NSString * _Nullable programId;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EaseLiveErrorLevel, "Level", open) {
  EaseLiveErrorLevelFatal = 0,
  EaseLiveErrorLevelWarning = 1,
};

typedef SWIFT_ENUM_NAMED(NSInteger, EaseLiveErrorComponent, "Component", open) {
  EaseLiveErrorComponentViewInit = 0,
  EaseLiveErrorComponentViewConnectivity = 1,
  EaseLiveErrorComponentBridgeInit = 2,
  EaseLiveErrorComponentBridgeConnectivity = 3,
  EaseLiveErrorComponentPlayerInit = 4,
  EaseLiveErrorComponentPlayerConnectivity = 5,
};


SWIFT_CLASS("_TtC11EaseLiveSDK24EaseLiveNotificationKeys")
@interface EaseLiveNotificationKeys : NSObject
/// The Ease Live SDK is ready to show Ease Live graphics, consume touch events and play media.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull easeLiveReady;)
+ (NSNotificationName _Nonnull)easeLiveReady SWIFT_WARN_UNUSED_RESULT;
/// An error occurred in EaseLive SDK.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull easeLiveError;)
+ (NSNotificationName _Nonnull)easeLiveError SWIFT_WARN_UNUSED_RESULT;
/// The view was created.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull viewCreated;)
+ (NSNotificationName _Nonnull)viewCreated SWIFT_WARN_UNUSED_RESULT;
/// The view started loading.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull viewLoad;)
+ (NSNotificationName _Nonnull)viewLoad SWIFT_WARN_UNUSED_RESULT;
/// The view completed loading.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull viewReady;)
+ (NSNotificationName _Nonnull)viewReady SWIFT_WARN_UNUSED_RESULT;
/// An error occurred in the view plugin.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull viewError;)
+ (NSNotificationName _Nonnull)viewError SWIFT_WARN_UNUSED_RESULT;
/// The web app started loading
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeAppLoading;)
+ (NSNotificationName _Nonnull)bridgeAppLoading SWIFT_WARN_UNUSED_RESULT;
/// The web app completed loading
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeAppReady;)
+ (NSNotificationName _Nonnull)bridgeAppReady SWIFT_WARN_UNUSED_RESULT;
/// The web app status changed
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeAppStatus;)
+ (NSNotificationName _Nonnull)bridgeAppStatus SWIFT_WARN_UNUSED_RESULT;
/// The web app is ready to consume events.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeReady;)
+ (NSNotificationName _Nonnull)bridgeReady SWIFT_WARN_UNUSED_RESULT;
/// An error occurred in the bridge plugin.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeError;)
+ (NSNotificationName _Nonnull)bridgeError SWIFT_WARN_UNUSED_RESULT;
/// The web app wants the player to change its playback speed.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeSpeed;)
+ (NSNotificationName _Nonnull)bridgeSpeed SWIFT_WARN_UNUSED_RESULT;
/// The web app wants to change visibility of the player controls.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeStage;)
+ (NSNotificationName _Nonnull)bridgeStage SWIFT_WARN_UNUSED_RESULT;
/// The web app wants the player to change its state, for example to pause / play.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeState;)
+ (NSNotificationName _Nonnull)bridgeState SWIFT_WARN_UNUSED_RESULT;
/// The web app wants the player to seek to the given timecode.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeTime;)
+ (NSNotificationName _Nonnull)bridgeTime SWIFT_WARN_UNUSED_RESULT;
/// The web app wants the player to change its selected tracks.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeTracks;)
+ (NSNotificationName _Nonnull)bridgeTracks SWIFT_WARN_UNUSED_RESULT;
/// The web app wants the player to change its audio volume.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeVolume;)
+ (NSNotificationName _Nonnull)bridgeVolume SWIFT_WARN_UNUSED_RESULT;
/// The web app wants to change the current configuration.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeConfig;)
+ (NSNotificationName _Nonnull)bridgeConfig SWIFT_WARN_UNUSED_RESULT;
/// The web app responds to a ping.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeKeepAlive;)
+ (NSNotificationName _Nonnull)bridgeKeepAlive SWIFT_WARN_UNUSED_RESULT;
/// The web app changed its current language.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeLanguage;)
+ (NSNotificationName _Nonnull)bridgeLanguage SWIFT_WARN_UNUSED_RESULT;
/// The web app sent a message.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bridgeMessage;)
+ (NSNotificationName _Nonnull)bridgeMessage SWIFT_WARN_UNUSED_RESULT;
/// The player is ready to play media.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerReady;)
+ (NSNotificationName _Nonnull)playerReady SWIFT_WARN_UNUSED_RESULT;
/// An error occurred in the player plugin.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerError;)
+ (NSNotificationName _Nonnull)playerError SWIFT_WARN_UNUSED_RESULT;
/// The player read metadata from the stream.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerMetadata;)
+ (NSNotificationName _Nonnull)playerMetadata SWIFT_WARN_UNUSED_RESULT;
/// The player changed the playback speed.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerSpeed;)
+ (NSNotificationName _Nonnull)playerSpeed SWIFT_WARN_UNUSED_RESULT;
/// The player changed the visibility of the player controls.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerStage;)
+ (NSNotificationName _Nonnull)playerStage SWIFT_WARN_UNUSED_RESULT;
/// The player state changed.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerState;)
+ (NSNotificationName _Nonnull)playerState SWIFT_WARN_UNUSED_RESULT;
/// The player read the timecode of the current playback position.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerTime;)
+ (NSNotificationName _Nonnull)playerTime SWIFT_WARN_UNUSED_RESULT;
/// The player read the available and currently selected tracks from the current stream.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerTracks;)
+ (NSNotificationName _Nonnull)playerTracks SWIFT_WARN_UNUSED_RESULT;
/// The player changed the audio volume.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull playerVolume;)
+ (NSNotificationName _Nonnull)playerVolume SWIFT_WARN_UNUSED_RESULT;
/// The mobile app wants the web app to change its current language.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull appLanguage;)
+ (NSNotificationName _Nonnull)appLanguage SWIFT_WARN_UNUSED_RESULT;
/// The mobile app sends a message to the web app.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull appMessage;)
+ (NSNotificationName _Nonnull)appMessage SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>bridgeConfig</code>, containing the <code>Config</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull configUserInfoKey;)
+ (NSString * _Nonnull)configUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>easeLiveError</code>, <code>viewError</code>,
/// <code>bridgeError</code> and <code>playerError</code>, containing the <code>Error</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull errorUserInfoKey;)
+ (NSString * _Nonnull)errorUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>playerStage</code> and <code>bridgeStage</code>, containing a <code>String</code> object.
/// requires:
/// Valid values are visible or hidden.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull controlsUserInfoKey;)
+ (NSString * _Nonnull)controlsUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>playerTime</code> and <code>bridgeTime</code>, containing a <code>Int64</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull timecodeUserInfoKey;)
+ (NSString * _Nonnull)timecodeUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerTime</code>, containing a <code>Int64</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull initialTimecodeUserInfoKey;)
+ (NSString * _Nonnull)initialTimecodeUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerTime</code>, containing a <code>Int64</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull maxTimecodeUserInfoKey;)
+ (NSString * _Nonnull)maxTimecodeUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerMetadata</code>, containing a <code>String</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull metadataUserInfoKey;)
+ (NSString * _Nonnull)metadataUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>playerState</code> and <code>bridgeState</code>, containing a <code>String</code> object.
/// requires:
/// Valid values are one of <code>PlayerState</code>.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull stateUserInfoKey;)
+ (NSString * _Nonnull)stateUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>appLanguage</code> and <code>bridgeLanguage</code>, containing a <code>String</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull languageUserInfoKey;)
+ (NSString * _Nonnull)languageUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>appLanguage</code> and <code>bridgeLanguage</code>, containing a <code>[String]</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull availableUserInfoKey;)
+ (NSString * _Nonnull)availableUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notifications <code>appMessage</code> and <code>bridgeMessage</code>, containing a <code>String</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull jsonStringUserInfoKey;)
+ (NSString * _Nonnull)jsonStringUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerTracks</code>, containing a <code>PlayerTracks</code> object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull tracksUserInfoKey;)
+ (NSString * _Nonnull)tracksUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerSpeed</code> and <code>bridgeSpeed</code>, containing a <code>Float</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull speedUserInfoKey;)
+ (NSString * _Nonnull)speedUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>playerVolume</code> and <code>bridgeVolume</code>, containing an <code>Int</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull volumeUserInfoKey;)
+ (NSString * _Nonnull)volumeUserInfoKey SWIFT_WARN_UNUSED_RESULT;
/// userInfo field in notification <code>bridgeAppStatus</code>, containing a <code>String</code> object
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull statusUserInfoKey;)
+ (NSString * _Nonnull)statusUserInfoKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ViewPlugin;
@class WKWebViewConfiguration;
@class UIScrollView;
@class WKNavigation;
@class NSURLRequest;
@class WKNavigationAction;
@class WKWindowFeatures;
@class WKNavigationResponse;
@class WKFrameInfo;
@class WKSecurityOrigin;

SWIFT_CLASS("_TtC11EaseLiveSDK15EaseLiveWebView")
@interface EaseLiveWebView : WKWebView <UIScrollViewDelegate, WKNavigationDelegate, WKUIDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame viewPlugin:(ViewPlugin * _Nonnull)viewPlugin configuration:(WKWebViewConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView * _Nonnull)scrollView;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (WKNavigation * _Nullable)loadRequest:(NSURLRequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationResponse:(WKNavigationResponse * _Nonnull)navigationResponse decisionHandler:(void (^ _Nonnull)(WKNavigationResponsePolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView runJavaScriptAlertPanelWithMessage:(NSString * _Nonnull)message initiatedByFrame:(WKFrameInfo * _Nonnull)frame completionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)webView:(WKWebView * _Nonnull)webView runJavaScriptConfirmPanelWithMessage:(NSString * _Nonnull)message initiatedByFrame:(WKFrameInfo * _Nonnull)frame completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)webView:(WKWebView * _Nonnull)webView runJavaScriptTextInputPanelWithPrompt:(NSString * _Nonnull)prompt defaultText:(NSString * _Nullable)defaultText initiatedByFrame:(WKFrameInfo * _Nonnull)frame completionHandler:(void (^ _Nonnull)(NSString * _Nullable))completionHandler;
- (void)webViewWebContentProcessDidTerminate:(WKWebView * _Nonnull)webView;
- (void)webView:(WKWebView * _Nonnull)webView requestDeviceOrientationAndMotionPermissionForOrigin:(WKSecurityOrigin * _Nonnull)origin initiatedByFrame:(WKFrameInfo * _Nonnull)frame decisionHandler:(void (^ _Nonnull)(WKPermissionDecision))decisionHandler SWIFT_AVAILABILITY(ios,introduced=15.0);
- (void)webView:(WKWebView * _Nonnull)webView requestMediaCapturePermissionForOrigin:(WKSecurityOrigin * _Nonnull)origin initiatedByFrame:(WKFrameInfo * _Nonnull)frame type:(WKMediaCaptureType)type decisionHandler:(void (^ _Nonnull)(WKPermissionDecision))decisionHandler SWIFT_AVAILABILITY(ios,introduced=15.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame configuration:(WKWebViewConfiguration * _Nonnull)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK19ExtendedVideoPlayer") SWIFT_DEPRECATED_MSG("renamed EaseLiveAvPlayer")
@interface ExtendedVideoPlayer : EaseLiveAvPlayer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, PlayerState, open) {
  PlayerStatePlaying = 0,
  PlayerStatePaused = 1,
  PlayerStateSeeking = 2,
  PlayerStateStopped = 3,
  PlayerStateBuffering = 4,
};


SWIFT_CLASS("_TtC11EaseLiveSDK16PlayerStateUtils")
@interface PlayerStateUtils : NSObject
+ (NSString * _Nonnull)getPlayerStateStringWithPlayerState:(enum PlayerState)playerState SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("use PlayerState#description");
+ (enum PlayerState)getPlayerStateObjectWithPlayerState:(NSString * _Nonnull)playerState SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("use PlayerState#forStateName");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK11PlayerTrack")
@interface PlayerTrack : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable language;
- (NSDictionary<NSString *, id> * _Nonnull)toJsonObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK17PlayerTrackConfig")
@interface PlayerTrackConfig : NSObject
@property (nonatomic, copy) NSString * _Nullable selectedId;
@property (nonatomic, readonly, copy) NSArray<PlayerTrack *> * _Nonnull available;
- (void)addTrackWithId:(NSString * _Nonnull)id name:(NSString * _Nonnull)name language:(NSString * _Nullable)language;
- (NSDictionary<NSString *, id> * _Nonnull)toJsonObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK12PlayerTracks")
@interface PlayerTracks : NSObject
@property (nonatomic, readonly, strong) PlayerTrackConfig * _Nonnull video;
@property (nonatomic, readonly, strong) PlayerTrackConfig * _Nonnull audio;
@property (nonatomic, readonly, strong) PlayerTrackConfig * _Nonnull text;
- (NSDictionary<NSString *, id> * _Nonnull)toJsonObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11EaseLiveSDK19ViewPluginInterface_")
@protocol ViewPluginInterface <ComponentInterface>
- (void)setUrlWithUrl:(NSString * _Nonnull)url;
- (NSString * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasInjectedBridge SWIFT_WARN_UNUSED_RESULT;
- (void)injectJavascriptWithJavaScriptString:(NSString * _Nonnull)javaScriptString completionHandler:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completionHandler;
@end


SWIFT_CLASS("_TtC11EaseLiveSDK10ViewPlugin")
@interface ViewPlugin : NSObject <ViewPluginInterface>
- (nonnull instancetype)initWithParentView:(UIView * _Nonnull)parentView url:(NSString * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (void)setUrlWithUrl:(NSString * _Nonnull)url;
- (NSString * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (void)create;
- (WKUserContentController * _Nonnull)createWebViewUserContentController SWIFT_WARN_UNUSED_RESULT;
- (WKWebViewConfiguration * _Nonnull)createWebViewConfiguration SWIFT_WARN_UNUSED_RESULT;
- (EaseLiveWebView * _Nonnull)createWebView SWIFT_WARN_UNUSED_RESULT;
- (void)load;
- (UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasInjectedBridge SWIFT_WARN_UNUSED_RESULT;
- (void)injectJavascriptWithJavaScriptString:(NSString * _Nonnull)javaScriptString completionHandler:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completionHandler;
- (void)destroy;
- (void)pause;
- (void)onCreate;
- (void)onLoad;
- (void)onReady;
- (void)onErrorWithError:(EaseLiveError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
